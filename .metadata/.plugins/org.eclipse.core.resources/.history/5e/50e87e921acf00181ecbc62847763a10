package cm.allpha.Echo_Sos.service;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.fileUpload;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import cm.allpha.Echo_Sos.controller.EchoSosAccountController;
import cm.allpha.Echo_Sos.controller.EchoSosDefaultController;
import cm.allpha.Echo_Sos.model.EchoSosAccount;
import cm.allpha.Echo_Sos.model.EchoSosMail;
import cm.allpha.Echo_Sos.persistence.EchoSosAccountInterface;
import cm.allpha.Echo_Sos.persistence.EchoSosMailInterface;

@Service
public class EchoSosAccountService implements UserDetailsService {

	@Autowired
	private EchoSosAccountInterface accountInterface;
	@Autowired
	private EchoSosMailInterface mailInterface;

	public List<EchoSosAccount> getAllAccount() {
		return accountInterface.findAll();
	}

	public List<EchoSosMail> getAllMailOfAccount() {
		return mailInterface.findAll();
	}

	public void addAccount(MultipartFile[] files, EchoSosAccount account) throws IOException {
		account = accountInterface.save(account);
		int id = account.getId_account();
		for (int i = 0; i < 1; i++) {
			Path fileNameAndPath = Paths.get(EchoSosAccountController.profileDirectry, id + "");
			Files.write(fileNameAndPath, files[i].getBytes());
		}
	}
	
	public void loadGallery(MultipartFile[] files) throws IOException {
		for (int i = 0; i < 1; i++) {
			Random random1 = new Random();
			
			Random random2 = new Random();
			
			Path fileNameAndPath = Paths.get(EchoSosDefaultController.LOADGALLERY, random2.nextInt() + random1.toString());
			Files.write(fileNameAndPath, files[i].getBytes());
		}
	}

	public void addAccountwithmail(EchoSosAccount account) {
		accountInterface.save(account);
	}

	public EchoSosAccount getIdAccount(Integer id) {
		return accountInterface.findById(id).get();
	}
	private EchoSosAccount getByUsername(int phone) {
		return accountInterface.findByCphone(phone);
		
	}

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		EchoSosAccount user = getByUsername(Integer.parseInt(username));
		GrantedAuthority authority = new SimpleGrantedAuthority(user.getStatus());
		return new org.springframework.security.core.userdetails.User(username, user.getCpassword(),
				Arrays.asList(authority));
	}

}
